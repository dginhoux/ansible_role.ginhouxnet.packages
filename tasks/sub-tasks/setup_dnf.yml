---
# - name: install/remove with dnf
#   ansible.builtin.dnf:
#     name: "{{ item.dnf | default(item.name) }}"
#     state: "{{ item.state | default(package_state) }}"
#     update_cache: "{{ packages_update_cache }}"
#   when: ( item.dnf_ignore | default('no') ) | string in 'False,false,No,no'
#   with_items: "{{ packages_list }}"


- name: Dnf Init removal packages list
  ansible.builtin.set_fact:
    list_remove: []

- name: Dnf populate removal packages list
  ansible.builtin.set_fact:
    list_remove: "{{ list_remove + [item.dnf | default(item.name)] }}"
  when: >
    ( item.dnf_ignore | default('no') ) | string in 'False,false,No,no'
    and
    item.state | default(package_state) == "absent"
  with_items: "{{ packages_list }}"

- name: Dnf remove packages
  ansible.builtin.dnf:
    name: "{{ list_remove }}"
    state: "absent"
  when: list_remove is defined and list_remove | length > 0


- name: Dnf init install packages list
  ansible.builtin.set_fact:
    list_add: []

- name: Dnf populate install packages list
  ansible.builtin.set_fact:
    list_add: "{{ list_add + [item.dnf | default(item.name)] }}"
  when: >
    ( item.dnf_ignore | default('no') ) | string in 'False,false,No,no'
    and
    item.state | default(package_state) == "present"
  with_items: "{{ packages_list }}"

- name: Dnf install packages
  ansible.builtin.dnf:
    name: "{{ list_add }}"
    state: "present"
    update_cache: "{{ packages_update_cache }}"
  when: list_add is defined and list_add | length > 0
